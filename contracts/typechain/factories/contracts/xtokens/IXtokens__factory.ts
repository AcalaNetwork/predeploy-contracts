/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IXtokens,
  IXtokensInterface,
} from "../../../contracts/xtokens/IXtokens";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "assets",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "fee",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
    ],
    name: "TransferredMultiAssets",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "asset",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transferMultiAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "asset",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "fee",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transferMultiAssetWithFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "assets",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "feeItem",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transferMultiAssets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "currencyId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IXtokens.Currency[]",
        name: "currencies",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "feeItem",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transferMultiCurrencies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "dest",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "weight",
        type: "bytes",
      },
    ],
    name: "transferWithFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IXtokens__factory {
  static readonly abi = _abi;
  static createInterface(): IXtokensInterface {
    return new utils.Interface(_abi) as IXtokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IXtokens {
    return new Contract(address, _abi, signerOrProvider) as IXtokens;
  }
}
