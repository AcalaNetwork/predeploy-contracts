/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IHonzon,
  IHonzonInterface,
} from "../../../contracts/honzon/IHonzon";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "collateralAdjustment",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "debitAdjustment",
        type: "int128",
      },
    ],
    name: "AdjustedLoan",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
    ],
    name: "ClosedLoanByDex",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
      {
        internalType: "int128",
        name: "collateralAdjustment",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "debitAdjustment",
        type: "int128",
      },
    ],
    name: "adjustLoan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxCollateralAmount",
        type: "uint256",
      },
    ],
    name: "closeLoanByDex",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
    ],
    name: "getCollateralParameters",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
    ],
    name: "getCurrentCollateralRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
    ],
    name: "getDebitExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "address",
        name: "currencyId",
        type: "address",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IHonzon__factory {
  static readonly abi = _abi;
  static createInterface(): IHonzonInterface {
    return new utils.Interface(_abi) as IHonzonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHonzon {
    return new Contract(address, _abi, signerOrProvider) as IHonzon;
  }
}
